import paseo.*
describe "test de una familia que NO pasea" {

//NOTA: Este fixture está incompleto y sirve para comenzar a testear el examen.
//Es a modo de ayuda, pero no es obligatorio respetar este escenario. 
// Puede modificarse tanto como sea necesario.

	var mediaIzquierda = new Prenda(desgaste = 1) //elemento de par
	var mediaDerecha = new Prenda(desgaste = 3)
	
	//prenda par, la media izquierda tiene que tener 1 de desgaste, la derecha 3, el abrigo es default 0
    var mediasZoe = new PrendaDeAPares(talle=s, elementoDerecho = mediaDerecha, elementoIzquierdo=mediaIzquierda) 
	
	//prenda par, el izquierdo y derecho tiene los valores default (desgaste 0, abrigo 1)
	var default = new Prenda(desgaste=0, abrigo=1)
	var zapatillasZoe = new PrendaDeAPares(talle=s, elementoDerecho = default, elementoIzquierdo=default)
		
	//prenda pesada con 5 de abrigo
	var jeanZoe = new PrendaPesada(talle=s, abrigo=5) 
	
	//prenda liviana con desgaste default: 0
	var remeraZoe = new PrendaLiviana(talle=s) 
	
	// prenda pesada con desgaste default: 0
	var camperaZoe = new PrendaPesada(talle=s) 

	//un juguete para niños de 5 a 100 anios
	var ukelele = new Juguete(min=5, max=100)
	
	//prenda liviana con un desgaste de 5
	var remeraMilena = new PrendaLiviana(talle=xs, nivelDeDesgaste=5) //prenda liviana
	
	//prenda liviana con desgaste default: 0
	var calzaMilena = new PrendaLiviana(talle=xs) //prenda liviana

	//prenda par, la ojota izquierda tiene que tener 1 de desgaste y 2 de abrigo, la ojota derecha tiene 3 de desgaste y 3 de abrigo
    var ojotaIzquierda = new Prenda(desgaste=1, abrigo=2)
    var ojotaDerecha = new Prenda(desgaste=3, abrigo=3)
    var ojotasMilena = new PrendaDeAPares(talle=l, elementoDerecho=ojotaDerecha, elementoIzquierdo=ojotaIzquierda) 
	
	//ninio
	var zoe = new Ninio(talle=s, edad=11, prendas=#{mediasZoe, zapatillasZoe, jeanZoe, remeraZoe, camperaZoe }) 
	//ninio problematico
	var milena = new NinioProblematico(talle=xs, edad=2, prendas = #{remeraMilena, calzaMilena, ojotasMilena }, juguete=ukelele)
	
	//familia	
	var familiaAptaSalir = new Familia(ninios = #{ zoe})

	//familia	
	var familiaNoAptaParaSalir= new Familia(ninios = #{milena, zoe})
	
	
//PUNTO 1	
	test "comodidad" {
		mediasZoe.probarPrenda(zoe)
		zapatillasZoe.probarPrenda(zoe)
		jeanZoe.probarPrenda(zoe)
		remeraZoe.probarPrenda(zoe)
		camperaZoe.probarPrenda(zoe)
		remeraMilena.probarPrenda(milena)
		calzaMilena.probarPrenda(milena)
		ojotasMilena.probarPrenda(milena)
		assert.equals(6 , mediasZoe.nivelDeComodidad() )
		assert.equals(8 , zapatillasZoe.nivelDeComodidad())
		assert.equals(8 , jeanZoe.nivelDeComodidad())
		assert.equals(10 , remeraZoe.nivelDeComodidad())
		assert.equals(8 , camperaZoe.nivelDeComodidad())
//		assert.equals(7 , remeraMilena.nivelDeComodidad())		
		assert.equals(10 , calzaMilena.nivelDeComodidad())
//		assert.equals(-3 , ojotasMilena.nivelDeComodidad())
	}

//PUNTO 2		
 /*	test "intercambiar pares ok" {
		var mediaIzq = mediasZoe.elementoIzquierdo()
		var mediaDer = mediasZoe.elementoDerecho()
		var zapaIzq = zapatillasZoe.elementoIzquierdo()
		var zapaDer = zapatillasZoe.elementoDerecho()
		
		mediasZoe.intercambiar(zapatillasZoe)

		assert.equals(mediaIzq, mediasZoe.elementoIzquierdo())
		assert.equals(mediaDer, zapatillasZoe.elementoDerecho())
		assert.equals(zapaIzq, zapatillasZoe.elementoIzquierdo())
		assert.equals(zapaDer, mediasZoe.elementoDerecho())
				
	}*/
/* 
	test "intercambiar pares no ok" {
		//Que sucede si intercambio un par de talles distinto?
		//probar el cambio entre las ojotas de milena y las medias de zoe
		//El test está incompleto!
		ojotasMilena.intercambiar(mediasZoe)
	}
*/
//PUNTO 3	
	test "nivel de abrigo" {
		assert.equals(0 , mediasZoe.abrigo())
//		assert.equals(2 , /* abrigo de zapatillasZoe*/)
//		assert.equals(5 , /* abrigo de jeanZoe */)
//		assert.equals(1 , /* abrigo de remeraZoe*/)
//		assert.equals(3 , /* abrigo de camperaZoe*/)
		assert.equals(1 , remeraMilena.abrigo())		
//		assert.equals(1 , /* abrigo de calzaMilena*/)
//		assert.equals(5 , /* abrigo de ojotasMilena*/)
	}

//	PUNTO 4		
//	test "puede salir de paseo" {
//		assert.that(familiaAptaSalir.pasear())
//		assert.notThat(familiaNoAptaParaSalir.puedePasear())
//	}
//PUNTO 5
	
//	test "infaltables" {
//		assert.equals(#{jeanZoe,calzaMilena}, familiaNoAptaParaSalir.infaltables())		
//	}
//PUNTO 6
	test "chiquitos" {
		assert.equals(#{milena}, familiaNoAptaParaSalir.chiquitos())			
	}
	
//PUNTO 6	
//test "salir de paseo ok" {
//		familiaAptaSalir.pasear()
//		assert.equals(1.8 , mediaIzquierda.desgaste())
//		assert.equals(4.2 , mediaDerecha.desgaste())
//		assert.equals(3 , mediasZoe.desgaste())
//		assert.equals(1 , zapatillasZoe.desgaste())
//		assert.equals(1 , jeanZoe.desgaste())
//		assert.equals(1 , remeraZoe.desgaste())
//		assert.equals(1 , camperaZoe.desgaste())
		
//	}
//PUNTO 7	
/* 		test "salir de paseo no ok" {
		//Que sucede si le pido pasear a una familia que no está lista?
		//El test está incompleto!
		familiaNoAptaParaSalir.pasear()
		//
	}
	
*/	
}